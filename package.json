{
	"license": "MIT",
	"version": "1.17.3",
	"main": "./lib/main.js",
	"name": "ide-protoss",
	"description": "ProtoSS JS and Grammar support for Atom IDE",
	"author": {
		"name": "Zeta Ret",
		"url": "https://github.com/ZetaRet/"
	},
	"keywords": [
		"javascript",
		"protoss",
		"ide",
		"grammar",
		"console",
		"auto",
		"token",
		"data",
		"js",
		"typescript",
		"coffeescript",
		"html",
		"css",
		"php",
		"python",
		"java",
		"json",
		"xml",
		"markdown",
		"md",
		"text"
	],
	"repository": {
		"type": "git",
		"url": "git+https://github.com/ZetaRet/ide-protoss.git"
	},
	"configSchema": {
		"autoUpdateOnChange": {
			"title": "Auto async of tokens within seconds",
			"type": "string",
			"enum": [
				"disable",
				"0", "0.1", "0.2", "0.3", "0.4", "0.5",
				"1", "2", "3", "4", "5", "6", "7", "8", "9",
				"10",
				"15",
				"30",
				"45",
				"60"
			],
			"default": "disable",
			"order": 50,
			"description": "Automatic update of tokens on stop changing text editor. Update is asynchronous without notifications."
		},
		"breadcrumbs": {
			"title": "Breadcrumbs visibility",
			"type": "string",
			"enum": [
				"auto",
				"yes",
				"no"
			],
			"default": "auto",
			"order": 60,
			"description": "Top panel describing file, meta data, descriptors and hierarchy."
		},
		"console": {
			"title": "Console",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 70,
			"description": "Output of package console.log in developer tools"
		},
		"project": {
			"title": "Project lookup",
			"type": "string",
			"enum": [
				"project",
				"drive",
				"none"
			],
			"default": "project",
			"order": 180,
			"description": "Lookup method of protossdox.json bubbles up searching for project file in each parent folder. Limited by project/drive top folder."
		},
		"xdescript": {
			"title": "Extend descriptors",
			"type": "string",
			"enum": [
				"no",
				"yes"
			],
			"default": "no",
			"order": 210,
			"description": "Automatic creation of JSON descriptors will extend additional properties."
		},
		"textColor": {
			"title": "Text color",
			"type": "string",
			"enum": [
				"default",
				"#000000",
				"#090909",
				"#111111",
				"#1a1a1a",
				"#222222",
				"#2b2b2b",
				"#333333",
				"#3c3c3c",
				"#444444",
				"#4d4d4d",
				"#555555",
				"#5e5e5e",
				"#666666",
				"#6f6f6f",
				"#777777",
				"#808080",
				"#888888",
				"#919191",
				"#999999",
				"#a2a2a2",
				"#aaaaaa",
				"#b3b3b3",
				"#bbbbbb",
				"#c4c4c4",
				"#cccccc",
				"#d5d5d5",
				"#dddddd",
				"#e6e6e6",
				"#eeeeee",
				"#f7f7f7",
				"#ffffff"
			],
			"default": "default",
			"order": 100,
			"description": "CSS color of top panel"
		},
		"fontSize": {
			"title": "Font size",
			"type": "string",
			"enum": [
				"default",
				"10px",
				"11px",
				"12px",
				"13px",
				"14px",
				"15px",
				"16px",
				"17px",
				"18px",
				"20px"
			],
			"default": "default",
			"order": 90,
			"description": "CSS font size of top panel"
		},
		"splitpanel": {
			"title": "Split panel",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 80,
			"description": "Panel appears on two lines separating file and ProtoSS Dox project."
		},
		"maxTokensPerLine": {
			"title": "Maximum tokens per line",
			"type": "string",
			"enum": [
				"default",
				"100",
				"250",
				"500",
				"1000",
				"1500",
				"2000",
				"2500",
				"5000",
				"10000",
				"20000",
				"50000",
				"100000"
			],
			"default": "default",
			"order": 170,
			"description": "Configure any Grammar maximum line tokens per load of file in ProtoSS IDE."
		},
		"notifications": {
			"title": "Allow notifications",
			"type": "string",
			"enum": [
				"once",
				"yes",
				"no"
			],
			"default": "no",
			"order": 190,
			"description": "Notifications will popup on the screen for loaded JSON descriptors and analyzed tokens."
		},
		"groupdigits": {
			"title": "Allow digit grouping",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 160,
			"description": "Lines and tokens will appear in groups separated by space."
		},
		"grammarId": {
			"title": "Grammar",
			"type": "string",
			"enum": [
				"JavaScript",
				"TypeScript",
				"CoffeeScript",
				"HTML",
				"CSS",
				"PHP",
				"Python",
				"Java",
				"JSON",
				"XML",
				"GitHub Markdown",
				"Plain Text",
				"Auto"
			],
			"default": "JavaScript",
			"order": 130,
			"description": "Choose Grammar Tokenizer. Install or Enable missing ones, otherwise Null Grammar will be used. Auto will use editor grammar."
		},
		"findTokenCaseSensitivity": {
			"title": "Find Token case sensitivity",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "yes",
			"order": 150,
			"description": "Case Sensitive search of tokens. Token string value is always trimmed of whitespace."
		},
		"autoComplete": {
			"title": "Auto complete",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 10,
			"description": "Enable Auto-complete Service provider for File/Directory listing, JavaScript/TypeScript/HTML, ProtoSS hierarchy."
		},
		"autoCompleteTypes": {
			"title": "Include types in auto complete",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 30,
			"description": "Export property and method types from descriptors and add them to imports."
		},
		"autoCompleteNS": {
			"title": "Auto complete namespace",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 20,
			"description": "Auto-complete namespace of supername as prefix from AsyncProviders appearing from ProtoSS hierarchy/inherits/imports."
		},
		"autoCompleteCSS": {
			"title": "Auto complete CSS",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 40,
			"description": "Include CSS auto-complete service by keywords."
		},
		"autoCompleteHTML": {
			"title": "Auto complete HTML",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 41,
			"description": "Include HTML auto-complete service by elements, attributes, methods."
		},
		"autoCompleteSort": {
			"title": "Auto complete sorting",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "yes",
			"order": 45,
			"description": "Enable sorting in auto-complete service provider."
		},
		"autoBuild": {
			"title": "Auto build project",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 0,
			"description": "Automatically build the ProtoSS project space using current Atom Project paths, upon open/add/remove new project folder."
		},
		"useMultiviews": {
			"title": "Use Multiviews",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 200,
			"description": "Allow resolve of file tokens without extension by matching directory files and assumed extensions."
		},
		"fileTimeout": {
			"title": "File Timeout",
			"type": "number",
			"enum": [
				0,
				100,
				200,
				300,
				400,
				500,
				600,
				700,
				800,
				900,
				1000,
				1500,
				2000,
				3000,
				5000
			],
			"default": 500,
			"order": 110,
			"description": "Timeout before loading JSON files of project and descriptor."
		},
		"tokenTimeout": {
			"title": "Token Timeout",
			"type": "number",
			"enum": [
				0,
				100,
				200,
				300,
				400,
				500,
				600,
				700,
				800,
				900,
				1000,
				1500,
				2000,
				3000,
				5000
			],
			"default": 500,
			"order": 120,
			"description": "Timeout before loading tokens from Grammar."
		},
		"zetaret_omnipotency": {
			"title": "Omnipotent Mode",
			"type": "string",
			"enum": [
				"yes",
				"no"
			],
			"default": "no",
			"order": 140,
			"description": "Activate ProtoSS Omnipotency. Tokenize all file extensions using selected grammar, includes Project/Dox/Descriptors/Inheritance."
		},
		"styleGroupMark": {
			"title": "Marker Styles",
			"type": "object",
			"properties": {
				"markerAllow": {
					"title": "Allow highlight marker",
					"type": "string",
					"default": "no",
					"enum": ["no", "yes"],
					"description": "Current token will be marked for visibility."
				},
				"markerBackAlpha": {
					"title": "Alpha of highlight marker",
					"type": "number",
					"default": 10,
					"enum": [0, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
					"description": "Opacity of marker background in %"
				},
				"markerBackColor": {
					"title": "Color of highlight marker",
					"type": "color",
					"default": "#ffffff",
					"description": "Background of markers"
				},
				"markerBorderAlpha": {
					"title": "Alpha of highlight border",
					"type": "number",
					"default": 10,
					"enum": [0, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
					"description": "Opacity of marker border in %"
				},
				"markerBorderColor": {
					"title": "Color of highlight border",
					"type": "color",
					"default": "#ffffff",
					"description": "Border of markers"
				},
				"markerBorderRadius": {
					"title": "Radius of highlight border",
					"type": "number",
					"default": 4,
					"enum": [0, 1, 2, 3, 4, 5, 6, 7, 8],
					"description": "Border radius of markers"
				},
				"markerBorderType": {
					"title": "Border style type",
					"type": "string",
					"default": "solid",
					"enum": ["solid", "dashed", "dotted"],
					"description": "Border size is 1px and surrounds the marker."
				},
				"trimMarkers": {
					"title": "Remove surrounding whitespace",
					"type": "string",
					"default": "no",
					"enum": ["no", "yes"],
					"description": "Trim whitespace from token markers."
				},
				"markerFind": {
					"title": "Find markers",
					"type": "string",
					"default": "no",
					"enum": ["no", "yes"],
					"description": "Use current token settings to find more markers."
				},
				"markerFindSkip": {
					"title": "Skip punctuation in marker search",
					"type": "string",
					"default": "no",
					"enum": ["no", "yes"],
					"description": "Single punctuation characters will not be marked in find markers cases."
				},
				"markerRange": {
					"title": "Find markers range",
					"type": "number",
					"default": 10000,
					"enum": [1, 5, 10, 50, 100, 1000, 10000, 25000],
					"description": "Search range for additional occurrences."
				}
			},
			"order": 500,
			"description": "Group of colors, borders, backgrounds, and CSS config. Marked tokens use Atom Decoration/DisplayMarker API."
		},
		"breadcrumbsOptions": {
			"title": "Breadcrumbs Options",
			"type": "object",
			"properties": {
				"filePath": {
					"title": "File path",
					"type": "string",
					"default": "absolute",
					"enum": ["absolute", "relative", "last", "none"],
					"description": "Show current editor path in breadcrumbs.",
					"order": 10
				},
				"lines": {
					"title": "Lines",
					"type": "string",
					"default": "yes",
					"enum": ["yes", "no"],
					"description": "Show lines in breadcrumbs.",
					"order": 20
				},
				"tokens": {
					"title": "Tokens",
					"type": "string",
					"default": "yes",
					"enum": ["yes", "no"],
					"description": "Show tokens in breadcrumbs.",
					"order": 30
				},
				"icons": {
					"title": "Icons",
					"type": "string",
					"default": "yes",
					"enum": ["yes", "no"],
					"description": "Show icons in breadcrumbs.",
					"order": 40
				}
			},
			"order": 600,
			"description": "Group of options to control breadcrumbs view."
		},
		"autoCompleteOptions": {
			"title": "Options of Auto-completion",
			"type": "object",
			"properties": {
				"useMethodSnippets": {
					"title": "Use method snippets",
					"type": "string",
					"default": "no",
					"enum": ["no", "yes"],
					"description": "Parse method data from async JSON provider and use as snippet in the auto-complete block.",
					"order": 10
				},
				"filePriority": {
					"title": "Priority of File Provider",
					"type": "number",
					"default": 22,
					"description": "Appearance order of file/folder auto-complete service.",
					"order": 20
				},
				"basicPriority": {
					"title": "Priority of Basic Provider",
					"type": "number",
					"default": 21,
					"description": "Appearance order of all basic auto-complete services - JS/HTML/CSS.",
					"order": 30
				},
				"asyncPriority": {
					"title": "Priority of Async Provider",
					"type": "number",
					"default": 20,
					"description": "Appearance order of all asynchronous auto-complete services - JSON descriptors.",
					"order": 40
				},
				"wordPriority": {
					"title": "Priority of Word Provider",
					"type": "number",
					"default": 19,
					"description": "Appearance order of all word auto-complete services - text buffers.",
					"order": 45
				},
				"fileProvider": {
					"title": "Enable File Provider",
					"type": "string",
					"default": "basic",
					"enum": ["basic", "all", "disable"],
					"description": "Use File Provider in Auto-completion mode by using Basic Provider grammar types or in all grammars.",
					"order": 50
				},
				"basicProvider": {
					"title": "Enable Basic Provider",
					"type": "string",
					"default": "enable",
					"enum": ["enable", "disable"],
					"description": "Use Basic Provider in Auto-completion mode by matching grammar types.",
					"order": 60
				},
				"asyncProvider": {
					"title": "Enable Async Provider",
					"type": "string",
					"default": "basic",
					"enum": ["basic", "all", "disable"],
					"description": "Use Async Provider in Auto-completion mode by using Basic Provider grammar types or in all grammars.",
					"order": 70
				},
				"wordProvider": {
					"title": "Enable Word Provider",
					"type": "string",
					"default": "none",
					"enum": ["none", "all", "same", "active"],
					"description": "Use Word Provider in Auto-completion mode of current active text editor, same grammar type or all open buffers.",
					"order": 80
				},
				"wordLength": {
					"title": "Word Length",
					"type": "number",
					"default": 2,
					"enum": [2, 3, 4, 5, 6, 7, 8, 9, 10],
					"description": "Minimum length of the word from the text buffer.",
					"order": 85
				}
			},
			"order": 700,
			"description": "Group of options to control auto-complete service providers."
		}
	},
	"providedServices": {
		"autocomplete.provider": {
			"versions": {
				"2.0.0": "getProvider"
			}
		}
	},
	"engines": {
		"atom": ">= 1.40.0"
	}
}
